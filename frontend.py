import os

import customtkinter as ctk
import tkinter.filedialog
import customtkinter
from tkinter import messagebox

import pefile

import main
import sys


def read_files(filename=main.file_name()):
    with open(filename, 'r') as f:
        lines = f.read()

    return lines


def create_login_window():
    """Creates the login window."""
    customtkinter.set_appearance_mode("Dark")
    customtkinter.set_default_color_theme("dark-blue")
    root = ctk.CTk()
    root.geometry("450x250")
    root.title("Login Page")

    username_label = ctk.CTkLabel(master=root, text="Username:")
    username_label.pack(pady=5)
    username_entry = ctk.CTkEntry(master=root)
    username_entry.pack(pady=5)

    password_label = ctk.CTkLabel(master=root, text="Password:")
    password_label.pack(pady=5)
    password_entry = ctk.CTkEntry(master=root, show="*")
    password_entry.pack(pady=5)

    login_button = ctk.CTkButton(master=root, text="Login",
                                 command=lambda: login(username_entry.get(), password_entry.get()))
    login_button.pack(pady=5)

    root.mainloop()


def upload_exe_file_and_get_name():
    file_chooser = tkinter.filedialog.askopenfilename(filetypes=[("EXE files", "*.exe")])
    if file_chooser:
        file_name = file_chooser.split("/")[-1]
        with open('exe.txt', 'a') as file:
            file.write(f'{file_name} \n')
    else:
        pass

    main.main()

    final_result_win()


def upload_file():
    root = ctk.CTk()

    root.geometry("1000x500")
    upload_button = ctk.CTkButton(master=root, text="Upload EXE File", command=upload_exe_file_and_get_name, height=60,
                                  width=50)
    upload_button.configure(corner_radius=10, border_width=1, border_color="#0066CC")
    upload_button.pack(padx=15, pady=200)

    root.mainloop()


def login(username, password):
    if username == "admin" and password == "password":
        # root.destroy()
        upload_file()
    else:
        messagebox.showinfo(title="Error", message="Invalid Username or Password")


def final_result_win():
    # Create the login window.
    root = ctk.CTk()
    root.geometry("1000x500")

    # Create the 6 buttons.
    upload_button_strings = ctk.CTkButton(master=root, text="Strings", height=60, width=120,
                                          command=extract_and_display_printable_strings)
    upload_button_dissasembly = ctk.CTkButton(master=root, text="Imports", height=60, width=120, command=imports_in_file)
    upload_button_VT = ctk.CTkButton(master=root, text="Virustotal", height=60, width=120, command=vt_print_on_screen)

    upload_button_network_tra = ctk.CTkButton(master=root, text="Network Traffic", height=60, width=120)
    upload_button_filemod = ctk.CTkButton(master=root, text="Host Changes", height=60, width=120, command=file_mod_dis)
    upload_button_process = ctk.CTkButton(master=root, text="Processes Created", height=60, width=120, command=process_dis)

    # Configure the buttons.
    for button in [upload_button_strings, upload_button_dissasembly, upload_button_VT, upload_button_network_tra,
                   upload_button_filemod, upload_button_process]:
        button.configure(corner_radius=10, border_width=1, border_color="#0066CC")

    # Place the buttons on the window in a 3x3 matrix.
    upload_button_strings.grid(row=10, column=0, padx=100, pady=80)
    upload_button_dissasembly.grid(row=10, column=1, padx=100, pady=80)
    upload_button_VT.grid(row=10, column=2, padx=100, pady=80)

    upload_button_network_tra.grid(row=11, column=0, padx=100, pady=80)
    upload_button_filemod.grid(row=11, column=1, padx=100, pady=80)
    upload_button_process.grid(row=11, column=2, padx=100, pady=80)

    # Start the mainloop.
    root.mainloop()


def extract_and_display_printable_strings():
    printable_strings = []

    with open(f'C:\\Users\\pranav\\Desktop\\{main.file_name()}', 'rb') as file:
        data = file.read()
        sys.stdout.flush()
        current_string = ""
        for byte in data:
            if byte >= 32 and byte <= 126:  # Printable ASCII range
                current_string += chr(byte)
            else:
                if len(current_string) >= 4:
                    printable_strings.append(current_string)
                current_string = ""

    root = ctk.CTk()
    root.geometry("500x300")

    # Create a textbox to display the printable strings
    textbox = ctk.CTkTextbox(master=root)
    textbox.pack(pady=20, expand=True, fill='both')

    # Display the printable strings in the textbox
    textbox.insert("end", "\n".join(printable_strings))

    root.mainloop()


def vt_print_on_screen():
    try:
        os.system(f'vt scan file {main.file_name()} > vt_scan.txt')

    except:
        pass

    with open('result.txt', 'r') as f:
        lines = f.read()
        lines = lines[13:]

    try:
        os.system(f'vt analysis {lines} > results_vt.txt')
    except:
        pass

    with open('results_vt.txt', 'r') as f2:
        lines = f2.read()

    root = ctk.CTk()
    root.geometry("500x300")

    # Create a textbox to display the printable strings
    textbox = ctk.CTkTextbox(master=root)
    textbox.pack(pady=20, expand=True, fill='both')

    # Display the printable strings in the textbox
    textbox.insert("end", lines)

    root.mainloop()

def file_mod_dis():

    with open(f'{main.file_name()}.log', 'r') as f2:
        lines = f2.read()

    root = ctk.CTk()
    root.geometry("500x300")

    # Create a textbox to display the printable strings
    textbox = ctk.CTkTextbox(master=root)
    textbox.pack(pady=20, expand=True, fill='both')

    # Display the printable strings in the textbox
    textbox.insert("end", lines)

    root.mainloop()

def process_dis():

    with open('process.txt', 'r') as f2:
        lines = f2.read()

    root = ctk.CTk()
    root.geometry("500x300")

    # Create a textbox to display the printable strings
    textbox = ctk.CTkTextbox(master=root)
    textbox.pack(pady=20, expand=True, fill='both')

    # Display the printable strings in the textbox
    textbox.insert("end", lines)

    root.mainloop()

def imports_in_file():
    with open('C:\\Users\\pranav\\PycharmProjects\\MalwareAnalyzere\\exe.txt', 'r') as f:
        lines = f.readlines()
        last_line = lines[-1]
        last_line = last_line.strip()
    pe = pefile.PE(f"C:\\Users\\pranav\\Desktop\\{last_line}", fast_load=True)
    pe.parse_data_directories()

    for entry in pe.DIRECTORY_ENTRY_IMPORT:
        print(entry.dll)
        # for imp in entry.imports:
        #     func_imports = '\t', hex(imp.address), imp.name

    root = ctk.CTk()
    root.geometry("500x300")

    # Create a textbox to display the printable strings
    textbox = ctk.CTkTextbox(master=root)
    textbox.pack(pady=20, expand=True, fill='both')

    # Display the printable strings in the textbox
    textbox.insert("end", entry.imports)

    root.mainloop()